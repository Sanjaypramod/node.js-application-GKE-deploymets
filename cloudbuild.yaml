steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/certain-router-423311-c7/my-app:latest', '-f', 'Application/Dockerfile', 'Application']
    id: Build

  # Step 2: Push the Docker image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/certain-router-423311-c7/my-app:latest']
    id: Push

  # Step 3: Set up GKE authentication
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud config set project certain-router-423311-c7 && \
        gcloud container clusters get-credentials sanjay --region us-central1 --project certain-router-423311-c7
    id: GKE_Auth

  # Step 4: Install Helm
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && \
        apt-get install -y curl tar && \
        curl -LO https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz && \
        tar -zxvf helm-v3.8.0-linux-amd64.tar.gz && \
        mv linux-amd64/helm /usr/local/bin/helm && \
        /usr/local/bin/helm version
    id: Install_Helm

  # Step 5: Initialize Helm (optional, depending on your cluster setup)
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        /usr/local/bin/helm repo add stable https://charts.helm.sh/stable && \
        /usr/local/bin/helm repo update
    id: Init_Helm

  # Step 6: Deploy using Helm
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        /usr/local/bin/helm upgrade --install my-app-release ./helm/chart --set image.repository=gcr.io/certain-router-423311-c7/my-app,image.tag=latest
    id: Deploy_Helm

images:
  - 'gcr.io/certain-router-423311-c7/my-app:latest'

options:
  logging: CLOUD_LOGGING_ONLY

service_account: 'gcr-874@certain-router-423311-c7.iam.gserviceaccount.com'

timeout: '900s'
